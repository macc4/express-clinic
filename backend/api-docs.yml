openapi: 3.0.0
info:
  title: Clinic API
  description: Documentation for the ITRex Node.js Lab Clinic project
  version: 0.1.0
  contact:
    email: alekseileonenko98@gmail.com

components:
  schemas:
    queue:
      type: object
      required:
        - patientId
      properties:
        patientId:
          type: int
          description: Patient ID
      example:
        patientId: 1

    patient-post:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Patient's Name
      example:
        name: Edward Cullen

    patient-get:
      type: object
      properties:
        id:
          type: int
          description: Patient's ID
        name:
          type: string
          description: Patient's Name
      example:
        id: 1
        name: Edward Cullen

    resolution-post:
      type: object
      required:
        - resolution
      properties:
        resolution:
          type: string
          description: Resolution text
        timeToLive:
          type: integer
          description: TTL value in minutes
      example:
        resolution: He is a vampire!
        timeToLive: 20

    resolution-get:
      type: object
      properties:
        id:
          type: int
          description: Resolution ID
        patientId:
          type: int
          description: Patient's ID
        resolution:
          type: string
          description: Resolution text
        expiry:
          type: integer
          description: Expiry time in UNIX ms
      example:
        id: 1
        patientId: 1
        resolution: He is a vampire!
        expiry: 1630058155

tags:
  name: Patients
  description: API to manage patients
  name: Resolutions
  description: API to manage resolutions
  name: Queue
  description: API to manage the queue


paths:
  # PATIENTS
  /api/v1/patients:
    post:
      summary: Add a new patient to the database
      tags: [Patients]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patient-post'
      responses:
        201:
          description: Patient was successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient-get'
        404:
          description: Invalid input data or duplicate patient error
        500:
          description: Server error

  /api/v1/patients/?name=:
    get:
      summary: Get all the patients with optional name querying
      tags: [Patients]
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: Patient's name
      responses:
        200:
        description: Patient's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient-get'
        404:
          description: The patient was not found

  /api/v1/patients/{patientId}:
    get:
      summary: Get the patient by patientId
      tags: [Patients]
      parameters:
        - in: path
          name: patientId
          schema:
            type: int
          required: true
          description: Patient ID
      responses:
        200:
          description: Patient's data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient-get'
        404:
          description: The patient was not found

    delete:
      summary: Remove the patient by patientId
      tags: [Patients]
      parameters:
        - in: path
          name: patientId
          schema:
            type: integer
          required: true
          description: Patient ID
      responses:
        204:
          description: The patient was deleted
        404:
          description: The patient was not found  

  # RESOLUTIONS
  /api/v1/patients/{patientId}/resolutions:
    post:
      summary: Add a new resolution to the patient
      tags: [Resolutions]
      parameters:
        - in: path
          name: patientId
          schema:
            type: int
          required: true
          description: Patient ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/resolution-post'
      responses:
        201:
          description: Resolution was created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolution-get'
        404:
          description: Invalid input data
        500:
          description: Server error

    get:
      summary: Get all the resolution data for the patient
      tags: [Resolutions]
      parameters:
        - in: path
          name: patientId
          schema:
            type: int
          required: true
          description: Patient ID
      responses:
        200:
        description: All the resolutions data for the patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/resolution-get'
        404:
          description: The patient was not found 

    delete:
      summary: Delete all the resolution data for the patient
      tags: [Resolutions]
      parameters:
        - in: path
          name: patientId
          schema:
            type: int
          required: true
          description: Patient ID
      responses:
        204:
          description: Resolutions were deleted
        404:
          description: The patient was not found
    
  /api/v1/patients/{patientId}/resolutions/{resolutionId}:
    get:
      summary: Get resolution by resolutionId (not used in the project)
      tags: [Resolutions]
      parameters:
        - in: path
          name: patientId
          schema:
            type: int
          required: true
          description: Patient ID
        - in: path
          name: resolutionId
          schema:
            type: int
          required: true
          description: Resolution ID
      responses:
        204:
          description: Resolution Data by ID
        404:
          description: Resolution was not found

  # QUEUE
  /api/v1/queue:
    post:
      summary: Add the patient to the queue
      tags: [Queue]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patient'
      responses:
        201:
          description: Patient was successfully added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient'
        404:
          description: Invalid input data or duplicate patient error
        500:
          description: Server error

    get:
      summary: Get the first patient from the queue
      tags: [Queue]
      responses:
        200:
          description: Get data for the first patient in the queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/patient'
        404:
          description: The patient was not found

    delete:
      summary: Remove the first patient from the queue
      tags: [Queue]
      responses:
        204:
          description: The patient was deleted
        404:
          description: The patient was not found
